addop ::= '+'|'-'
mulop ::= '/'|'*'|'%'
primexpr ::= number|identifier|string|char|boolconst|typeof|input
mulexpr ::= primexpr (mulop primexpr)*
addexpr ::= addexpr (addop addexpr)*
expr ::= addexpr | boolexpr | listexpr
typeof ::= 'typeof' '(' expr ')'
input ::= 'input' '(' string ')'

stmt ::= outstmt|vorcstmt|assignstmt|deletestmt|blockstmt|ifstmt|whilestmt|repeatstmt
outstmt ::= 'out' expr ';'
vorcstmt ::= 'var'|'const' identifier '=' expr ';'
assignstmt ::= identifier '=' expr ';'
deletestmt ::= 'delete' identifier ';'
blockstmt ::= '{' (stmt)* '}'
ifstmt ::= 'if' '(' boolexpr ')' blockstmt|stmt
elsestmt ::= 'else' blockstmt
whilestmt ::= 'while' '(' boolexpr ')' blockstmt|stmt
repeatstmt ::= 'repeat' '(' addexpr ')' blockstmt|stmt
breakstmt ::= 'break' ';'
for_each_stmt ::= 'for_each' '(' 'var' identifier ':' identifier ')' blockstmt